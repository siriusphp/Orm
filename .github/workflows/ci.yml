name: CI

on:
  push:
    branches: [ dev_2x ]
  pull_request:
    branches: [ dev_2x ]

jobs:
  build:
    strategy:
      matrix:
        php: ['7.2']
#        include:
#            - php: '8.0'
#              composer-flags: '--ignore-platform-req=php'
#              phpunit-flags: '--no-coverage'

    runs-on: ubuntu-latest

    services:
      siriusorm_mysql:
        image: mysql:8.0
        env:
          MYSQL_USER: sirius
          MYSQL_PASSWORD: sirius
          MYSQL_DATABASE: siriusorm
          MYSQL_ROOT_PASSWORD: sirius
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v2

#     - uses: mirromutth/mysql-action@v1.1
#       with:
#         mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
#         mysql database: 'siriusorm' # Optional, default value is "test". The specified database which will be create
#         mysql root password: 'rootpass' # Required if "mysql user" is empty, default is empty. The root superuser password

    - name: Verify MySQL connection
      run: |
        while ! mysqladmin ping -h"localhost" -P3306 --silent; do
          sleep 1
        done

    - name: Setup PHP with fail-fast
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        coverage: xdebug
      env:
        fail-fast: true
    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Run test suite
      env:
        MYSQL_CONNECTION: 'mysql:host=localhost;dbname=siriusorm'
        MYSQL_USER: 'root'
        MYSQL_PASS: 'sirius'
      run: |
        mkdir -p build/logs
        vendor/bin/phpunit

    - name: Upload to Scrutinizer-CI
      run: wget https://scrutinizer-ci.com/ocular.phar && php ocular.phar code-coverage:upload --format=php-clover ./build/logs/clover.xml
